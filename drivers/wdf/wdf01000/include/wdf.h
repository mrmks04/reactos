
#ifndef _WDF_H
#define _WDF_H

#include <ntddk.h>
#include "wdftypes.h"

#define WDF_DRIVER_GLOBALS_NAME_LEN (32)

//
// Versioning of structures for wdfGlobals.h
//
typedef struct _WDF_DRIVER_GLOBALS_V1_9
{
    // backpointer to the handle for this driver
    WDFDRIVER Driver;

    // Flags indicated by the driver during create
    ULONG DriverFlags;

    // Tag generated by WDF for the driver.  Tag used by allocations made on
    // behalf of the driver by WDF.
    ULONG DriverTag;

    CHAR DriverName[WDF_DRIVER_GLOBALS_NAME_LEN];

    // If TRUE, the stub code will capture DriverObject->DriverUnload and insert
    // itself first in the unload chain.  If FALSE, DriverUnload is left alone
    // (but WDF will not be notified of unload and there will be no auto cleanup).
    BOOLEAN DisplaceDriverUnload;

} WDF_DRIVER_GLOBALS_V1_9, *PWDF_DRIVER_GLOBALS_V1_9;

typedef WDF_DRIVER_GLOBALS_V1_9 WDF_DRIVER_GLOBALS, *PWDF_DRIVER_GLOBALS;

#endif //_WDF_H
